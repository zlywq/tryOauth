server:
  port: 10081
#  ssl:
#    key-alias: alias1
#    key-password: 123456
#    key-store: classpath:serverKeystore.jks
#    key-store-password: 123456
##    key-store-provider: canOmit
##    key-store-type: canOmit
  tomcat:
    uri-encoding: UTF-8

myOauthServer:
  hostUrlWithoutPort: http://localhost
  #hostUrl: http://localhost
  hostUrl: ${myOauthServer.hostUrlWithoutPort}:10080

security:
  oauth2:
    resource:
      jwt:
        keyUri: ${myOauthServer.hostUrl}/oauth/token_key
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjWx7waAGOW0GCvWtz22C0r2S9IDpjpURZiUbX9DFgUBSJ2/XqHYWP3I/I8IAWIvLqaE4RFAAwzaIySVN/pM2WUVRPCHlRF192HtrAc3CoZD5lVOHsU5f++22N6CrjQJQkX4V88efI596TbzqYkNJzmNLeBKuip9MLlMTW6z7+wuIw3KOUGk3+nH8MspMUk7vrGFOZG+UslkYCnx6+1gInEddaZm5HHyvAUh/lo7At3a2g7TaYE3PepSpZsZ6YNw68YhOkI+xG2OFkLek1vej8bGz6wEubeYI4nI3fjm8pEqh1s0NJrHwrxLtp9ncvo08bWEYYZonKJ5FvVw9+jgXiwIDAQAB
          -----END PUBLIC KEY-----
#security:
#  oauth2:
#    resource:
#      jwt:
#        keyUri: ${myOauthServer.hostUrl}/oauth/token_key
#        keyValue: 123
#      #user-info-uri: ${myOauthServer.hostUrl}/res1/me

# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
#security.oauth2.resource.filter-order= # The order of the filter chain used to authenticate tokens.
#security.oauth2.resource.id= # Identifier of the resource.
#security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.
#security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
#security.oauth2.resource.jwk.key-set-uri= # The URI for getting the set of keys that can be used to validate the token.
#security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.
#security.oauth2.resource.service-id=resource #
#security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.
#security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.
#security.oauth2.resource.user-info-uri= # URI of the user endpoint.



druid1:
  url: jdbc:mysql://127.0.0.1:3306/sprbtOauth1?useUnicode=true&characterEncoding=utf-8
  username: user1
  password: aaa
  driver-class: com.mysql.jdbc.Driver
  initial-size: 1
  min-idle: 1
  max-active: 20
  test-on-borrow: true

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    sprssozdemo1: DEBUG